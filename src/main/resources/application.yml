spring:
  application:
    name: tms-api-gateway
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      timeout: 5000ms
      connect-timeout: 5000ms
      client-type: lettuce
  lifecycle:
    timeout-per-shutdown-phase: 20s
  cloud:
    gateway:
      httpclient:
        connect-timeout: 5000   # 5 seconds
        response-timeout: 10s   # 10 seconds
        pool:
          max-idle-time: 15s
          max-connections: 200
      default-filters:
        - name: Retry
          args:
            retries: 3
            methods: GET,POST,PUT,DELETE
            series: SERVER_ERROR
            exceptions: java.io.IOException,java.util.concurrent.TimeoutException,org.springframework.web.reactive.function.client.WebClientRequestException,reactor.netty.http.client.PrematureCloseException
            backoff:
              firstBackoff: 300ms
              maxBackoff: 2000ms
              factor: 2
              basedOnPreviousValue: true

# Observabilidad - Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      probes:
        enabled: true
      show-details: when_authorized
      livenessState:
        enabled: true
      readinessState:
        enabled: true
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans

  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true

# Logging estructurado
logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [%X{traceId:-}, %X{spanId:-}] %-5level %logger{36} - %msg%n"
  level:
    root: INFO
    com.dliriotech.tms.apigateway: INFO

springdoc:
  swagger-ui:
    url: /openapi.yaml
    path: /swagger-ui.html

service:
  auth-service-url: ${AUTH_SERVICE_ROUTE}
  fleet-service-url: ${FLEET_SERVICE_ROUTE}

gateway:
  publicPaths:
    - "/api/auth/login"
    - "/api/auth/validate"
    - "/api/tokens/generate"
    - "/api/tokens/refresh"
    - "/api/users/register"

app:
  cache:
    ttl-seconds: 300
    prefixes:
      token-validation: "token:validation:"

server:
  port: 8080
  shutdown: graceful